***TRUNCATE***
SELECT trunc(42.1256, 2);
***Truncating and grouping***
SELECT trunc(unanswered_count, -1) AS trunc_ua,
        count(*)
  FROM stackoverflow
WHERE tag='amazon-ebs'
GROUP BY trunc_ua  --column alias
ORDER BY trunc_ua; --column alias
**Generate series**
SELECT generate_series(start, end, step);
***Create bins:query***
---Create brins
WITH bins AS (
      SELECT generate_series(30,60,5) AS lower,
            generate_series(35,65,5) AS upper),
---subset data to tag of interest
      ebs AS (
      SELECT unanswered_count
        FROM stackoverflow
      WHERE tag='amazon-ebs')
--Count values in each bin
SELECT lower, upper, count(unanswered_count)
--left join keeps all bins
FROM bins
      LEFT JOIN ebs
              ON unanswered_count>=lower
              AND unanswered_count<upper
--Group by bin bounds to create the groups
GROUP BY lower, upper
ORDER BY lower;

-- Truncate employees
SELECT trunc(employees, -5) AS employee_bin,
       -- Count number of companies with each truncated value
       count(*)
  FROM fortune500
 -- Use alias to group
 GROUP BY employee_bin
 -- Use alias to order
 ORDER BY employee_bin;

-- Truncate employees
SELECT trunc(employees, -4) AS employee_bin,
       -- Count number of companies with each truncated value
       count(*)
  FROM fortune500
 -- Limit to which companies?
 WHERE employees < 100000
 -- Use alias to group
 GROUP BY employee_bin
 -- Use alias to order
 ORDER BY employee_bin;

-- Bins created in Step 2
WITH bins AS (
      SELECT generate_series(2200, 3050, 50) AS lower,
             generate_series(2250, 3100, 50) AS upper),
     -- Subset stackoverflow to just tag dropbox (Step 1)
     dropbox AS (
      SELECT question_count 
        FROM stackoverflow
       WHERE tag='dropbox') 
-- Select columns for result
-- What column are you counting to summarize?
SELECT lower, upper, count(question_count) 
  FROM bins  -- Created above
       -- Join to dropbox (created above), 
       -- keeping all rows from the bins table in the join
       LEFT JOIN dropbox
       -- Compare question_count to lower and upper
         ON question_count >= lower 
        AND question_count < upper
 -- Group by lower and upper to count values in each bin
 GROUP BY lower, upper
 -- Order by lower to put bins in order
 ORDER BY lower;
